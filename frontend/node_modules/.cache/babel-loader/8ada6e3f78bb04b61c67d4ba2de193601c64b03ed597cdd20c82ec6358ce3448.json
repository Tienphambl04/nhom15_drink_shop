{"ast":null,"code":"export async function registerUser(data) {\n  try {\n    const res = await fetch('http://localhost:5000/api/users/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    return await res.json();\n  } catch (error) {\n    return {\n      success: false,\n      message: 'Lỗi kết nối server'\n    };\n  }\n}\nexport async function loginUser(data) {\n  try {\n    const res = await fetch('http://localhost:5000/api/users/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    return await res.json();\n  } catch (error) {\n    return {\n      success: false,\n      message: 'Lỗi kết nối server'\n    };\n  }\n}\nexport async function updateProfile(data, token) {\n  try {\n    const res = await fetch('http://localhost:5000/api/users/update-profile', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify(data)\n    });\n    return await res.json();\n  } catch (error) {\n    return {\n      success: false,\n      message: 'Lỗi kết nối server'\n    };\n  }\n}\nexport async function changePassword(data, token) {\n  try {\n    const res = await fetch('http://localhost:5000/api/users/change-password', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify(data)\n    });\n    return await res.json();\n  } catch (error) {\n    return {\n      success: false,\n      message: 'Lỗi kết nối server'\n    };\n  }\n}","map":{"version":3,"names":["registerUser","data","res","fetch","method","headers","body","JSON","stringify","json","error","success","message","loginUser","updateProfile","token","changePassword"],"sources":["E:/Svnam3_2/LTweb/drink_shop/frontend/src/api/auth.js"],"sourcesContent":["export async function registerUser(data) {\r\n  try {\r\n    const res = await fetch('http://localhost:5000/api/users/register', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(data),\r\n    });\r\n    return await res.json();\r\n  } catch (error) {\r\n    return { success: false, message: 'Lỗi kết nối server' };\r\n  }\r\n}\r\n\r\nexport async function loginUser(data) {\r\n  try {\r\n    const res = await fetch('http://localhost:5000/api/users/login', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(data),\r\n    });\r\n    return await res.json();\r\n  } catch (error) {\r\n    return { success: false, message: 'Lỗi kết nối server' };\r\n  }\r\n}\r\n\r\nexport async function updateProfile(data, token) {\r\n  try {\r\n    const res = await fetch('http://localhost:5000/api/users/update-profile', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    return await res.json();\r\n  } catch (error) {\r\n    return { success: false, message: 'Lỗi kết nối server' };\r\n  }\r\n}\r\n\r\nexport async function changePassword(data, token) {\r\n  try {\r\n    const res = await fetch('http://localhost:5000/api/users/change-password', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    return await res.json();\r\n  } catch (error) {\r\n    return { success: false, message: 'Lỗi kết nối server' };\r\n  }\r\n}"],"mappings":"AAAA,OAAO,eAAeA,YAAYA,CAACC,IAAI,EAAE;EACvC,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,0CAA0C,EAAE;MAClEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;IAC3B,CAAC,CAAC;IACF,OAAO,MAAMC,GAAG,CAACO,IAAI,CAAC,CAAC;EACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAO;MAAEC,OAAO,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAqB,CAAC;EAC1D;AACF;AAEA,OAAO,eAAeC,SAASA,CAACZ,IAAI,EAAE;EACpC,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;MAC/DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;IAC3B,CAAC,CAAC;IACF,OAAO,MAAMC,GAAG,CAACO,IAAI,CAAC,CAAC;EACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAO;MAAEC,OAAO,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAqB,CAAC;EAC1D;AACF;AAEA,OAAO,eAAeE,aAAaA,CAACb,IAAI,EAAEc,KAAK,EAAE;EAC/C,IAAI;IACF,MAAMb,GAAG,GAAG,MAAMC,KAAK,CAAC,gDAAgD,EAAE;MACxEC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,UAAUU,KAAK;MAClC,CAAC;MACDT,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;IAC3B,CAAC,CAAC;IACF,OAAO,MAAMC,GAAG,CAACO,IAAI,CAAC,CAAC;EACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAO;MAAEC,OAAO,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAqB,CAAC;EAC1D;AACF;AAEA,OAAO,eAAeI,cAAcA,CAACf,IAAI,EAAEc,KAAK,EAAE;EAChD,IAAI;IACF,MAAMb,GAAG,GAAG,MAAMC,KAAK,CAAC,iDAAiD,EAAE;MACzEC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,UAAUU,KAAK;MAClC,CAAC;MACDT,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;IAC3B,CAAC,CAAC;IACF,OAAO,MAAMC,GAAG,CAACO,IAAI,CAAC,CAAC;EACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAO;MAAEC,OAAO,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAqB,CAAC;EAC1D;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}